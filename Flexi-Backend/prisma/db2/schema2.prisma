// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../../src/generated/client2"
}

generator clientDist {
  provider = "prisma-client-js"
  output   = "../../dist/src/generated/client2"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL2")
}

generator dbml {
  provider = "prisma-dbml-generator"
  output   = "../dbml/schema2.dbml"
}

model User {
  id        Int           @id @default(autoincrement())
  email     String        @unique
  password  String
  firstName String
  lastName  String
  avatar    String?
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  phone     String        @unique
  username  String?       @unique
  Business  BusinessAcc[] @relation(name: "BusinessOwner")
  member    Member[]
}

model Member {
  uniqueId   String       @id @default(uuid())
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  userId     Int
  user       User         @relation(fields: [userId], references: [id])
  businessId Int?
  business   BusinessAcc? @relation(fields: [businessId], references: [id], name: "BusinessMembers")
  office     Office[]
  coach      Coach[]
  bank       Bank[]
  agency     Agency[]
  orm        Orm[]
  account    Account[]
}

model BusinessAcc {
  id           Int       @id @default(autoincrement())
  createdAt    DateTime? @default(now())
  updatedAt    DateTime? @updatedAt
  name         String
  businessType Category
  userId       Int
  user         User      @relation(fields: [userId], references: [id], name: "BusinessOwner")
  AllMember    Member[]  @relation(name: "BusinessMembers")
  Office       Office[]
  Coach        Coach[]
  Bank         Bank[]
  Agency       Agency[]
  Orm          Orm[]
  Account      Account[]
}

model Office {
  id           Int         @id @default(autoincrement())
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  Category     Category    @default(Office)
  title        String
  description  String
  image        String?
  callToAction String?
  businessId   Int
  businessAcc  BusinessAcc @relation(fields: [businessId], references: [id])
  authorId     String
  author       Member      @relation(fields: [authorId], references: [uniqueId])
}

model Coach {
  id           Int         @id @default(autoincrement())
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  Category     Category    @default(Coach)
  title        String
  description  String
  image        String?
  callToAction String?
  businessId   Int
  businessAcc  BusinessAcc @relation(fields: [businessId], references: [id])
  authorId     String
  author       Member      @relation(fields: [authorId], references: [uniqueId])
}

model Bank {
  id           Int         @id @default(autoincrement())
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  Category     Category    @default(Bank)
  title        String
  description  String
  image        String?
  callToAction String?
  businessId   Int
  businessAcc  BusinessAcc @relation(fields: [businessId], references: [id])
  authorId     String
  author       Member      @relation(fields: [authorId], references: [uniqueId])
}

model Agency {
  id           Int         @id @default(autoincrement())
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  Category     Category    @default(Agency)
  title        String
  description  String
  image        String?
  callToAction String?
  businessId   Int
  businessAcc  BusinessAcc @relation(fields: [businessId], references: [id])
  authorId     String
  author       Member      @relation(fields: [authorId], references: [uniqueId])
}

model Orm {
  id           Int         @id @default(autoincrement())
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  Category     Category    @default(Orm)
  title        String
  description  String
  image        String?
  callToAction String?
  businessId   Int
  businessAcc  BusinessAcc @relation(fields: [businessId], references: [id])
  authorId     String
  author       Member      @relation(fields: [authorId], references: [uniqueId])
}

model Account {
  id           Int         @id @default(autoincrement())
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  Category     Category    @default(Account)
  title        String
  description  String
  image        String?
  callToAction String?
  businessId   Int
  businessAcc  BusinessAcc @relation(fields: [businessId], references: [id])
  authorId     String
  author       Member      @relation(fields: [authorId], references: [uniqueId])
}
enum Category {
  Office
  Coach
  Bank
  Agency
  Account
  Orm
}
