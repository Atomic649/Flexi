// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../../src/generated/client2"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL2")
}


generator dbml {
  provider = "prisma-dbml-generator"
  output   = "../dbml/schema2.dbml"
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  firstName String
  lastName  String
  avatar    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  phone     String   @unique
  username  String?  @unique 
  businessType     BusinessType @default(Other)
  Ads       Ads[]
  BusinessOwner Account[] @relation(name: "BusinessOwner")
  BusinessMembers Account[] @relation(name: "BusinessMembers")
}

model Account {
  id               String       @id @default(uuid())
  createdAt        DateTime?    @default(now())
  updatedAt        DateTime?    @updatedAt  
  userId           Int
  user             User         @relation(fields: [userId], references: [id], name: "BusinessOwner")
  AllMember        User[]       @relation(name: "BusinessMembers")
  AllAds           Ads[]     
 
}

model Ads {
  id        Int      @id @default(autoincrement())
  title     String
  content   String
  image     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  authorId  Int
  author    User     @relation(fields: [authorId], references: [id])
  businessId Int
  BusinessAcc Account[]
}

enum taxType {
  Juristic
  Individual
}

enum BusinessType {
  Factory
  Packaging
  Bank
  MarketingAgency  
  Accounting  
  Insurance
  RealEstate
  LuxuryGoods
  Logistics  
  BusinessCoach
  OnlineCourse
  Construction  
  Other
}